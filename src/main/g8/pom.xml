<project
    xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>


  <groupId>$groupId$</groupId>
  <artifactId>$name$-parent_2.12</artifactId>
  <version>$version$</version>
  <packaging>pom</packaging>

  <repositories>
    <repository>
      <id>cloudera</id>
      <url>https://repository.cloudera.com/artifactory/cloudera-repos/</url>
    </repository>


    <!-- this one requires credentials: https://cloudera.slack.com/archives/CCFB29UL8/p1644873750702119 -->
    <repository>
      <id>private-7.2.11.4</id>
      <url>https://archive.cloudera.com/p/cdp-public/7.2.11.4/maven-repository/</url>
    </repository>
	    
    <!--  This should be temporary ... but we need to figure out to get the hotfix artifacts we depend on published :( -->
    <repository>
      <id>gbn-repo-7.2.11.4</id>
      <url>https://cloudera-build-us-west-1.vpc.cloudera.com/s3/build/19858972/cdh/7.x/maven-repository/</url>
    </repository>
  </repositories>

  <modules>
    <module>core</module>
    <module>iceberg-demo</module>
  </modules>

  <properties>
    <java.version>1.8</java.version>
    <PermGen>64m</PermGen>
    <MaxPermGen>512m</MaxPermGen>
    <CodeCacheSize>512m</CodeCacheSize>
    <cde.version>$cde_version$</cde.version>
    <spark.version>$spark_version$</spark.version>
    <!-- big table of cde jar ids -->
    <cde.114.spark2></cde.114.spark2>
    <cde.114.spark3>3.1.1.1.14.317211.0-63</cde.114.spark3>
    <cde.114.iceberg.spark2></cde.114.iceberg.spark2>
    <cde.114.iceberg.spark3>0.9.1.1.14.317211.0-63</cde.114.iceberg.spark3>
    <!-- end table of cde jar ids -->
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.scala-lang</groupId>
      <artifactId>scala-library</artifactId>
      <version>\${scala.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.spark</groupId>
      <artifactId>spark-core_\${scala.short.version}</artifactId>
      <version>\${spark.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.scalatest</groupId>
      <artifactId>scalatest_\${scala.short.version}</artifactId>
      <version>3.0.5</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <dependencyManagement>
    <dependencies>
      <dependency>
	<groupId>org.apache.iceberg</groupId>
	<artifactId>iceberg-spark-runtime</artifactId>
	<version>\${iceberg.version}</version>
	<scope>provided</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <profiles>
    <profile>
      <id>cde_1.14_spark_3.1</id>
      <properties>
        <spark.version>\${cde.114.spark3}</spark.version>
	<iceberg.version>\${cde.114.iceberg.spark3}</iceberg.version>
        <scala.version>2.12.15</scala.version>
        <scala.short.version>2.12</scala.short.version>
      </properties>
      <activation>
        <property>
	  <name>default.build.profile</name>
	  <value>1.14_3.1</value>
        </property>
      </activation>
    </profile>

    <profile>
      <id>cde_1.14_spark_2.4</id>
      <properties>
        <spark.version>\${cde.114.spark2}</spark.version>
	<iceberg.version>\${cde.114.iceberg.spark2}</iceberg.version>
        <scala.version>2.11.8</scala.version>
      </properties>
      <activation>
        <property>
	  <name>default.build.profile</name>
	  <value>1.14_2.4</value>
        </property>
      </activation>
    </profile>

  </profiles>


  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>net.alchim31.maven</groupId>
          <artifactId>scala-maven-plugin</artifactId>
          <version>3.2.0</version>
          <configuration>
            <scalaVersion>\${scala.version}</scalaVersion>
            <recompileMode>incremental</recompileMode>
            <useZincServer>true</useZincServer>
            <args>
              <arg>-unchecked</arg>
              <arg>-deprecation</arg>
              <arg>-feature</arg>
            </args>
            <jvmArgs>
              <jvmArg>-Xms1024m</jvmArg>
              <jvmArg>-Xmx1024m</jvmArg>
              <jvmArg>-XX:PermSize=\${PermGen}</jvmArg>
              <jvmArg>-XX:MaxPermSize=\${MaxPermGen}</jvmArg>
              <jvmArg>-XX:ReservedCodeCacheSize=\${CodeCacheSize}</jvmArg>
            </jvmArgs>
            <javacArgs>
              <javacArg>-source</javacArg>
              <javacArg>\${java.version}</javacArg>
              <javacArg>-target</javacArg>
              <javacArg>\${java.version}</javacArg>
            </javacArgs>
          </configuration>
	  <executions>
            <execution>
              <id>scala-compile-first</id>
              <phase>process-resources</phase>
              <goals>
                <goal>compile</goal>
              </goals>
            </execution>
            <execution>
              <id>scala-test-compile-first</id>
              <phase>process-test-resources</phase>
              <goals>
                <goal>testCompile</goal>
              </goals>
            </execution>
	  </executions>
	</plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.3</version>
          <configuration>
            <source>\${java.version}</source>
            <target>\${java.version}</target>
            <encoding>UTF-8</encoding>
            <maxmem>1024m</maxmem>
            <fork>true</fork>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>net.alchim31.maven</groupId>
        <artifactId>scala-maven-plugin</artifactId>
      </plugin>
      <plugin>
	<artifactId>maven-assembly-plugin</artifactId>
	<configuration>
	  <descriptorRefs>
	    <descriptorRef>jar-with-dependencies</descriptorRef>
	  </descriptorRefs>
	</configuration>
	<executions>
	  <execution>
	    <id>make-assembly</id>
	    <phase>package</phase>
	    <goals>
	      <goal>single</goal>
	    </goals>
	  </execution>
	</executions>
      </plugin>
    </plugins>
  </build>
</project>
